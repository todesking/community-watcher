#!/usr/bin/env ruby
# -*- coding:utf-8 -*-

load File.join(File.dirname(__FILE__), '..', 'vendor', 'gree-community', 'lib', 'gree-community.rb')

# メッセージの送出を行わない
DRY_RUN = ENV['DRY_RUN'].to_i != 0

# https://github.com/ln/xmpp4r/issues/3#issuecomment-1739952
module REXMLEncodingFix
  if RUBY_VERSION < "1.9"
    # ...
  else
    # Encoding patch
    require 'socket'
    class ::TCPSocket
      def external_encoding
        Encoding::BINARY
      end
    end

    require 'rexml/source'
    class ::REXML::IOSource
      alias_method :encoding_assign, :encoding=
        def encoding=(value)
          encoding_assign(value) if value
        end
    end

    begin
      # OpenSSL is optional and can be missing
      require 'openssl'
      class ::OpenSSL::SSL::SSLSocket
        def external_encoding
          Encoding::BINARY
        end
      end
    rescue
    end
  end
end

CONFIG_FILENAME='config.yml'
STATE_FILENAME='state.yml'


if __FILE__ == $0
  "#{CONFIG_FILENAME}がない" unless File.exists? CONFIG_FILENAME
  config = Hash.new{|h,key|raise "設定項目#{key.inspect}がありません"}.merge! File.open(CONFIG_FILENAME){|f| YAML.load(f) }

  state = {
    source: {},
    sink: {},
  }
  if File.exists?(STATE_FILENAME)
    state.merge! File.open(STATE_FILENAME){|f| YAML.load(f) }
  end

  pipe = Pipe.new

  gree = Source::Gree.new(config['source']['gree'], state[:gree])

  jabber = Notifier::Jabber.new(config['notifier']['jabber'])

  pipe.add_source gree
  pipe.add_sink jabber

  puts "state: #{state.inspect}"

  done = false
  until done
    pipe.flush

    File.open(STATE_FILENAME,'w'){|f| f.puts YAML.dump(state) }

    puts "Sleeping"
    sleep config['general']['sleep_sec']
  end
  client.close
end

